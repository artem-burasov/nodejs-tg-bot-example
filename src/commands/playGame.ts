import { Telegraf, Context } from 'telegraf';
import { message } from 'telegraf/filters'

import { getGameState, addAttempt, startNewGame } from '../services/game.service';
import { checkWord } from '../utils/wordChecker';

export const setupPlayGameCommand = (bot: Telegraf<Context>) => {
    bot.command('start_game', async (ctx) => {
        const userId = ctx.from.id;
        const game = startNewGame(userId);
        await ctx.reply(`–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –ó–∞–≥–∞–¥–∞–Ω–æ —Å–ª–æ–≤–æ –∏–∑ 5 –±—É–∫–≤. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–ª–æ–≤–æ:`);
    });

    bot.action('start_game', async (ctx) => {
        const userId = ctx.from.id;
        const game = startNewGame(userId);
        await ctx.reply(`–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –ó–∞–≥–∞–¥–∞–Ω–æ —Å–ª–æ–≤–æ –∏–∑ 5 –±—É–∫–≤. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–ª–æ–≤–æ:`);
    });

    bot.on(message('text'), async (ctx) => {
        const userId = ctx.from.id;
        const game = getGameState(userId);

        console.log("game: ", game)

        if (!game || game.isGameOver) return;

        const word = ctx.message.text.toLowerCase();

        if (word.length !== 5) {
            await ctx.reply('–°–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 5 –±—É–∫–≤.');
            return;
        }

        const result = checkWord(word, game.targetWord);
        addAttempt(userId, word);

        await ctx.reply(result.join(''));

        if (word === game.targetWord) {
            await ctx.reply('üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ!', {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: '–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞', callback_data: 'restart_game' }],
                    ],
                },
            });
        } else if (game.attempts.length >= 6) {
            await ctx.reply(`–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: ${game.targetWord}`, {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: '–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞', callback_data: 'restart_game' }],
                    ],
                },
            });
        }
    });
};
